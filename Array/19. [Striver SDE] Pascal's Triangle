Type 1: 
Given an integer numRows, return the first numRows of Pascal's triangle.

vector<vector<int>> generate(int numRows) {
        vector<vector<int>> r(numRows);
        
        for(int i = 0; i<numRows; i++){
            r[i].resize(i+1);
            r[i][0] = 1;
            r[i][i] = 1;
            for(int j = 1; j<i; j++){
                r[i][j] = r[i-1][j-1] + r[i-1][j];
            }
        }
        return r;
    }
    
Type 2:    
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

vector<int> getRow(int rowIndex) {
        vector<int>r(rowIndex+1, 0);
        r[0] = 1;
        r[rowIndex] = 1;
        long long int row = rowIndex;
        long long int col = 1;
        for(int i = 1; i<=rowIndex-1; i++){
            r[i] = r[i-1] * row / col;
            row = row - 1;
            col = col + 1;
        }
        return r;
    }
    
Type 3:
Return the pascal value for given row & column value;

Formula  = (r-1)C(c-1)

int value = 1;
for(int i = 1; i<column; i++){
  value = value * row / i;
  row = row - 1;
}
return value;
