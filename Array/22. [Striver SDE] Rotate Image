You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

//Idea:
- First transpose the matrix -> swap matrix[i][j] with matrix[j][i]
- Reverse each row., can also use 2 pointer approach for reverse
- For 180 or 270 deg, there will be slight change but not thaat complicated


void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        for(int i = 0; i<n; i++)
            for(int j = 0; j<i; j++)    //j < i because we don't want elements i = j like (0,0), (1,1)...(n,n)
                swap(matrix[i][j], matrix[j][i]);
        
        for(int i = 0; i<n; i++)
            reverse(matrix[i].begin(), matrix[i].end());
    }
