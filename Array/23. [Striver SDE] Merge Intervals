Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, 
and return an array of the non-overlapping intervals that cover all the intervals in the input.

 vector<vector<int>> merge(vector<vector<int>>& intervals) {
        int n = intervals.size();

        vector<vector<int>> mergedIntervals;
        
        sort(intervals.begin(), intervals.end());
        
        vector<int> temp(2);
        temp = intervals[0];
        
        for(int i = 1; i< n; i++){
            if(temp[1] >= intervals[i][0]){
                temp[1] = max(intervals[i][1], temp[1]);
            }
            else{
                mergedIntervals.push_back(temp);
                temp = intervals[i];
            }
        }
        mergedIntervals.push_back(temp);
        
        return mergedIntervals;
    }
