You are given an array of size ‘N’. The elements of the array are in the range from 1 to ‘N’.
Ideally, the array should contain elements from 1 to ‘N’. 
But due to some miscalculations, there is a number R in the range [1, N] 
which appears in the array twice and another number M in the range [1, N] which is missing from the array.
Your task is to find the missing number (M) and the repeating number (R).


pair<int,int> missingAndRepeating(vector<int> &arr, int n)
{
	vector<int>count(n+1,0);
	pair<int,int> ans;
	for(int i = 0; i<n; i++){
		count[arr[i]]++;
	}
	
	for(int i = 1; i<=n; i++){
		if(count[i] == 0) ans.first = i;
		else if(count[i] > 1) ans.second = i;
	}
	
	return ans;
	
}

