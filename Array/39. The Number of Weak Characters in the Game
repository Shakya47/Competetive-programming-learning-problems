You are playing a game that contains multiple characters, and each of the characters has two main properties: attack and defense. 
You are given a 2D integer array properties where properties[i] = [attacki, defensei] represents the properties of the ith character in the game.

A character is said to be weak if any other character has both attack and defense levels strictly greater than this character's attack and defense levels. 
More formally, a character i is said to be weak if there exists another character j where attackj > attacki and defensej > defensei.

Return the number of weak characters.

//Idea:
- sort properties with attack[i]>a[i+1] & defense[i]<defense[i+1]

static bool cmp(vector<int>& a, vector<int>& b){
    if(a[0] != b[0])
        return a[0]>b[0];
    return a[1]<b[1];
}

int numberOfWeakCharacters(vector<vector<int>>& properties) {
    int n = properties.size();
    sort(properties.begin(), properties.end(), cmp);
    int count = 0;
    int maxDefense = INT_MIN;
    for(int i = 0; i<n; i++){
        if(properties[i][1] < maxDefense)
            count++;
        else maxDefense = properties[i][1];
    }
    return count;
}
