Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.

A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.

//Idea:
- Simple binary search and inorder traversal

TreeNode* createTree(vector<int>& nums, int low, int high){
    if(low<=high){
        int mid = low + (high-low)/2;
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = createTree(nums, low, mid-1);
        root->right = createTree(nums, mid+1, high);
        return root;
    }
    return NULL;
}
TreeNode* sortedArrayToBST(vector<int>& nums) {
    return createTree(nums,0, nums.size()-1);
}
