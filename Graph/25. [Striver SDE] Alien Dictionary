Given a sorted dictionary of an alien language having N words and k starting alphabets of standard dictionary. Find the order of characters in the alien language.
Note: Many orders may be possible for a particular test case, 
thus you may return any valid order and output will be 1 if the order of string returned by the function is correct else 0 denoting incorrect string returned.

//Idea:
- Create a adj list using the strings
- do a topo sort

vector<int> topoSort(int V, vector<int> adj[]) 
{
    vector<int> res;
    queue<int> q;
    int indegree[V]={0};
    for(int i = 0; i<V; i++){
        for(int u : adj[i])
            indegree[u]++;
    }
    for(int i = 0; i<V; i++){
        if(indegree[i]==0)
            q.push(i);
    }
    while(!q.empty()){
        int u = q.front();
        q.pop();
        res.push_back(u);
        for(int v: adj[u]){
            indegree[v]--;
            if(indegree[v]==0)
                q.push(v);

        }
    }
    return res;
}

//driver code
  string findOrder(string dict[], int N, int K) {
      vector<int> adj[K];
      vector<int> topo;
      string ans = "";
      for(int i = 0; i<N-1; i++){
          string s1 = dict[i];
          string s2 = dict[i+1];
          int len = min(s1.size(), s2.size());
          for(int ptr = 0; ptr < len; ptr++){
              if(s1[ptr]!=s2[ptr]){
                  adj[s1[ptr] - 'a'].push_back(s2[ptr] - 'a');
                  break;
              }
          }
      } 

      topo = topoSort(K, adj);
      for(auto it : topo){
          ans += char(it + 'a');
      }
      return ans;
  }
