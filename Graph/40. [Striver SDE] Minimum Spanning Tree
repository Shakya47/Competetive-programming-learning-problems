Given a weighted, undirected and connected graph of V vertices and E edges. The task is to find the sum of weights of the edges of the Minimum Spanning Tree.
Minimum Spanning Tree - subset of a tree where nodes = n and edges = n-1 with edges being the minimum

//Idea:
- use a min-heap
- if you want the tree then also store parent in the min-heap

int spanningTree(int V, vector<vector<int>> adj[])
{
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
    vector<int>vis(V, 0);
    int sum = 0;
    pq.push({0,0}); //{wt, node}

    while(!pq.empty()){
        int node = pq.top().second;
        int wt = pq.top().first;
        pq.pop();
        if(vis[node]) continue; //very important 
        vis[node] = 1;
        sum += wt;

        for(auto it : adj[node]){
            int adjNode = it[0];
            int edgWt = it[1];
            if(!vis[adjNode]){
                pq.push({edgWt, adjNode});
            }
        }
    }
    return sum;
}
