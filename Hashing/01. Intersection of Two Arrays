//Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.
//Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
//Output: [9,4]

//Idea: 
- Put the first array in a set
- then check whether the 2nd array has any same elements in the set
-- if yes then push to the res and also remove from the set as we want unique

vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> n;
        for(int i=0; i<nums1.size(); i++){
            n.insert(nums1[i]);       //inserting nums1 elements in unordered set to get only unique values
        }
        vector<int>res;
        for(int i=0; i<nums2.size(); i++){
            if(n.find(nums2[i])!=n.end()){
                res.push_back(nums2[i]);
                n.erase(nums2[i]);  //erasing so that if nums2 contains repeated elements, it won't check it
            }
        }
        return res;
    }


JavaScript:
var intersection = function(nums1, nums2) {
    const set = new Set();
    for(let i = 0; i<nums1.length; i++){
        set.add(nums1[i]);
    }

    let res = [];
    for(let i = 0; i<nums2.length; i++){
        if(set.has(nums2[i])){
            res.push(nums2[i]);
            set.delete(nums2[i]);
        }
    }
    return res;
};
