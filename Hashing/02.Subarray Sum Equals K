Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

Input: nums = [1,1,1], k = 2
Output: 2

Input: nums = [1,2,3], k = 3
Output: 2



//Hint: Prefix sum and Hashmap, Very Tricky

int subarraySum(vector<int>& a, int k) {
        int n = a.size();
        unordered_map<int,int> mp;
        int count = 0;
        int psum = 0;
        for(int i=0; i<n; i++){
            psum += a[i];
            if(psum==k)count++;
            if(mp.find(psum-k)!=mp.end())
                count += mp[psum-k];
            mp[psum]++;
                          
        }
        return count;
    }
