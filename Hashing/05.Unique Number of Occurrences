//Given an array of integers arr, return true if the number of occurrences of each value in the array is unique, or false otherwise.

//Input: arr = [1,2,2,1,1,3]
//Output: true

//Idea:
- Store values in map with ++ its occurence
- then run a loop to find if the same occurence is present in the map

bool uniqueOccurrences(vector<int>& a) {
        unordered_map<int,int> h;   //map to store numbers and their occurrences
        for(int i=0; i<a.size(); i++){
            if(h.find(a[i])==h.end())
                h[a[i]]=1;
            else
                h[a[i]]++;
        }
        unordered_set<int> s; //to checkh if the occurrence is same as the earlier ones
        for(auto it = h.begin(); it!=h.end(); it++){
            if(s.find(it->second)!=s.end()) return false;
            else
                s.insert(it->second);
        }
        return true;
    }

-------------------------------------------------------
Javascript:
-------------------------------------------------------
var uniqueOccurrences = function(arr) {
    let map = new Map();
    let set = new Set();

    for(let a of arr) {
        map.set(a, (map.get(a) || 0) + 1);
    }

    for(let [k,v] of map) {
        if(set.has(v)) { //Remember, we are storing map values not keys as we need to find unique occurences not uniqe numbers in nums
            return false;
        }
        set.add(v);
    }
    return true;
};
