Given an array of strings strs, group the anagrams together. You can return the answer in any order.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

//Idea:
- all the anagrams, when sorted are equal, hence we will use hashmap
- the sorted string will be the key and original string will be pushed to the value of hashmap

vector<vector<string>> groupAnagrams(vector<string>& strs) {
    unordered_map<string, vector<string>> mp;
    for (string s : strs) {
        string t = s; 
        sort(t.begin(), t.end());
        mp[t].push_back(s);
    }
    vector<vector<string>> anagrams;
    for (auto p : mp) { 
        anagrams.push_back(p.second);
    }
    return anagrams;
}

JavaScritp:
var groupAnagrams = function(strs) {
 const mp = new Map();
    for (const s of strs) {
        const t = s.split('').sort().join('');
        if (!mp.has(t)) {
            mp.set(t, []);
        }
        mp.get(t).push(s);
    }
    const anagrams = Array.from(mp.values());
    return anagrams;
};
