You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking.
A double booking happens when two events have some non-empty intersection (i.e., some moment is common to both events.).
The event can be represented as a pair of integers startTime and endTime that represents a booking on the half-open interval [startTime, endTime), the range of real numbers x such that startTime <= x < endTime.

Implement the MyCalendar class:
MyCalendar() Initializes the calendar object.
boolean book(int startTime, int endTime) Returns true if the event can be added to the calendar successfully without causing a double booking. Otherwise, return false and do not add the event to the calendar.

//Idea:
- for events = [a,b] [c,d]
- Basically we'll be checking Math.max(a, c) < Math.min(b, d)

var MyCalendar = function () { //this is how we create constructor function
    this.bookings = [];
};

MyCalendar.prototype.book = function (startTime, endTime) {

    for (let [start, end] of this.bookings) {
        if (Math.max(start, startTime) < Math.min(end, endTime)) {
            return false;
        }
    }
    this.bookings.push([startTime, endTime])
    return true;

};
