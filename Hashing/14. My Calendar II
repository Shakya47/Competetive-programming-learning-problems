You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking.
A triple booking happens when three events have some non-empty intersection (i.e., some moment is common to all the three events.).
The event can be represented as a pair of integers startTime and endTime that represents a booking on the half-open interval [startTime, endTime), the range of real numbers x such that startTime <= x < endTime.

Implement the MyCalendarTwo class:
MyCalendarTwo() Initializes the calendar object.
boolean book(int startTime, int endTime) Returns true if the event can be added to the calendar successfully without causing a triple booking. Otherwise, return false and do not add the event to the calendar.

//Idea:
- little bit same as pervious one
- only thing is, for triple booking, we will store the double booking into an overlap[]
- if overlap[] has booking, we will return false
- we can't use counter

var MyCalendarTwo = function () {
    this.bookings = [];
    this.overlap = []
};

MyCalendarTwo.prototype.book = function (startTime, endTime) {
    for (let [start, end] of this.overlap) {
        if (Math.max(start, startTime) < Math.min(end, endTime)) {
            return false;
        }
    }


    for (let [start, end] of this.bookings) {
        if (Math.max(start, startTime) < Math.min(end, endTime)) {
            this.overlap.push([Math.max(start, startTime), Math.min(end, endTime)]);
        }
    }
    this.bookings.push([startTime, endTime]);
    return true;
};
