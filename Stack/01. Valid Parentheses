Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
Input: s = "()[]{}"
Output: true

/Using Stack is the most efficient way to solve this problem

class Solution {
    bool matching(char a, char b){
        return (a=='(' && b==')' || a=='{' && b=='}' || a=='[' && b==']');
    }
public:
    bool isValid(string s) {
        stack<char> valid;
        for(int i = 0; i<s.length(); i++){
            if(s[i]=='(' || s[i]=='{' || s[i]=='[')
                valid.push(s[i]);
            else{
                if(valid.empty()==true) return false;
                else if(matching(valid.top(), s[i]) == false) return false;
                else
                    valid.pop();
            }
        }
        return (valid.empty());
    }
};
