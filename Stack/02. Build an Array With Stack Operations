
You are given an array target and an integer n.
In each iteration, you will read a number from list = [1, 2, 3, ..., n].
Build the target array using the following operations:
"Push": Reads a new element from the beginning list, and pushes it in the array.
"Pop": Deletes the last element of the array.
If the target array is already built, stop reading more elements.
Return a list of the operations needed to build target. The test cases are generated so that the answer is unique.

//Its more of an Array question than stack, but solved it while learning stack

vector<string> buildArray(vector<int>& target, int n) {
        vector<string> s;
        int t=0;
        for(int i=1; i<=n && t<target.size(); i++){
            if(target[t]==i){
                s.push_back("Push");
                t++;
            }
            else if(i<target[t]){
                s.push_back("Push");
                s.push_back("Pop");
            }
        }
        return s;
    }
