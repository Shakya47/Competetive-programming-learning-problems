Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, 
return the area of the largest rectangle in the histogram

//Hint: Use previous & next smaller to calculated width of the rectangle
- They can be easily found by modifying the previous problem "Previous and Next smaller"
- if no smaller found, assign it the size of the array
- Previous-smaller and next-smaller will tell us the width of the rectangle


int main()
{
    vector<int> a = {4,2,1,5,6,3,2,4,2};
    int n = a.size();
    stack<int> s;
    vector<int> ps(n);
    vector<int> ns(n);
    
    //Previous Smaller elements
    for(int i =0; i<n; i++){
        while(s.empty()==false && a[s.top()]>=a[i])
            s.pop();
        ps[i] = (s.empty())?-1: s.top();
        s.push(i);
    }
    while(s.empty()==false) s.pop();
    //Next Smaller elements
    for(int i = n-1; i>=0; i--){
        while(s.empty()==false && a[s.top()]>=a[i])
            s.pop();
        ns[i] = (s.empty())?n:s.top();
        s.push(i);
    }

    int res = 0;
    int cur = 0;
    for(int i = 0; i<n; i++){
        cur = (ns[i]-ps[i]-1)*a[i];     //This is crucial, (ns[i]-ps[i]-1) is used to calculated width & a[i] for height
        res = max(res, cur);
    }
    cout<<res;
}
