//Given an input string s, reverse the order of the words.
//A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
//Return a string of the words in reverse order concatenated by a single space.
 
 //Removing extra spaces is a challenge
 //Idea:
 - Step 1 - Reverse words
 - Step 2- Remove extra space
 
 string reverseWords(string s) {
        
 //Reversing each Word using recursion      
        int start = 0;
        int n = s.length();
        for(int end=0; end<s.length(); end++){
            if(s[end]==' '){
                reverse(s, start, end-1);   //reverse each letter of a word
                start = end+1;
            }
        }
        reverse(s, start,n-1);  //reverse each letter of the last word
        reverse(s, 0, n-1);     //reverse the entire string
        
        //By this time we have got the string reversed but with spaces also
        
        //Below logic is to remove all the extra space
        int i=0;
        while(s[i]==' '){
            s.erase(s.begin()+i);
        }
        
        for(i; i<s.length();i++){
            if(s[i]==s[i+1]&&s[i]==' '){
                s.erase(s.begin()+i);
                i--;
            }
        }
        n = s.length();
        if(s[n-1]==' ')
            s.erase(s.begin()+n-1);
        return s;
    }
    
    void reverse(string &s, int low, int high){
        while(low<=high){
            swap(s[low], s[high]);
            low++;
            high--;
        }
    }
--------------------------------------------------------------------------------------------------------------------------------------------
Efficient answer

//custom comparator for unique 
bool BothAreSpace(char x1,char x2)
{
	if(x1==x2 && x1==' ') return true;
	return false;
}
class Solution {
public:
    string reverseWords(string s) {
        //Reversing each Word using recursion      
        int start = 0;
        int n = s.length();
        for(int end=0; end<s.length(); end++){
            if(s[end]==' '){
                reverse(s, start, end-1);   //reverse each letter of a word
                start = end+1;
            }
        }
        reverse(s, start,n-1);  //reverse each letter of the last word
        reverse(s, 0, n-1);     //reverse the entire string
        
    //Removing extra spaces
    s.erase(unique(s.begin(), s.end(), BothAreSpace), s.end());
    if(s[0]==' ')
        s.erase(s.begin());
    if(s[s.length()-1]==' ')
        s.erase(s.begin()+s.length()-1);
        
        
return s;
    }
     void reverse(string &s, int low, int high){
        while(low<=high){
            swap(s[low], s[high]);
            low++;
            high--;
        }
     }
};



