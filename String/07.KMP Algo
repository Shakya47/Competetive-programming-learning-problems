//Used to find pattern
//Based on LPS

int main()
{

    string s = "ababcababaad";
    int n = s.length();
    string p = "ababa";
    int m = p.length();
    int lps[n];
    fillLPS(s, lps);    //replace this with lps code
    int i=0;
    int len=0;
    while(i<n){
        if(s[i]==p[len]){
            i++;
            len++;
        }
        if(len == m){   //Pattern is found
            cout<<i-len<<" ";   //starting index in s where pattern was found
            len = lps[len-1];   //make len to its previous value as another pattern might overlap the current one
        }
        else if(i<n && s[i]!=p[len]){
            if(len==0){ //if pattern is not found
                i++;
            }
            else{
                len = lps[len-1];
            }
        }
    }

    return 0;

}
