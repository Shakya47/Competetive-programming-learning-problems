Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift.

Input: s = "abcde", goal = "cdeab"
Output: true

Idea:
- concatenate the string goal to itself.
- find if the string s is present in goal
- the function find() for string is weird, memorize it.

bool rotateString(string s, string goal) {
        if(goal.length()!=s.length()) return false;
        if(goal == s) return true;
        goal = goal + goal;
        return (goal.find(s)!=string::npos);
    }
