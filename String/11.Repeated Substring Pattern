Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.
Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.


//Used LPS is this, very simple logic

 void fillLPS(vector<int> &lps, string &s){
        int n = s.length();
        int len = 0;
        int i = 1;
        while(i<n){
            if(s[i]==s[len]){
                len++;
                lps[i]=len;
                i++;
            }
            else{
                if(len==0){
                    lps[i]=len;
                    i++;
                }
                else{
                    len = lps[len-1];
                }
            }
        }
    }
    bool repeatedSubstringPattern(string s) {
        int n = s.length();
        vector<int> lps(n);
        fillLPS(lps, s);
        return n>1 && lps[n-1]!=0 && n%(n-lps[n-1])==0;
        
    }
