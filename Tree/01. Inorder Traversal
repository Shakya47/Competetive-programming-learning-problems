Print inorder -> Left -> Root -> Right


#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct node{
    node *left;
    node *right;
    int data;
    node(int x){
        data = x;
        left = NULL;
        right = NULL;
    }
};

void inorder(node *root){   //Left Root Right
    if(root!=NULL){
        inorder(root->left);
        cout<<root->data<<" ";
        inorder(root->right);
    }
}
int main()
{
    node *root = new node(10);
    root->left = new node(5);
    root->right = new node(15);
    root->left->left = new node(2);
    inorder(root);

    return 0;
}


JavaScript:
const inorder = function(root, res){
    if(root !== null){
        inorder(root.left, res);
        res.push(root.val);
        inorder(root.right, res);
    }
}

var inorderTraversal = function(root) {
    let res = [];
    inorder(root, res);
    return res;
};
