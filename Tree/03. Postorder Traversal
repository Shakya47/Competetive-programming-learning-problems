/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void postorder(TreeNode* root, vector<int>& post){
        if(root!=NULL){
            postorder(root->left, post);
            postorder(root->right, post);
            post.push_back(root->val);
        }
    }
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> post;
        postorder(root, post);
        return post;
    }
};

JavaScript:
const postorder = function(root, res){
    if(root !== null){
        postorder(root.left, res);
        postorder(root.right, res);
        res.push(root.val);
    }
}

var postorderTraversal = function(root) {
    let res = [];
    postorder(root, res);
    return res;
};
