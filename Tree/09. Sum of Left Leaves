Given the root of a binary tree, return the sum of all left leaves.
A leaf is a node with no children. A left leaf is a leaf that is the left child of another node.
//Its leaf, that means left & right node should be NULL


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int sum = 0;
    void sumitup(TreeNode *root){
        if(!root) return;
        if(!root->left && !root->right) return;
        if(root->left && !root->left->left && !root->left->right){  //Checking if its a leaf or not
           sum += root->left->val;
        }
        sumitup(root->left);
        sumitup(root->right);
    }
public:
    int sumOfLeftLeaves(TreeNode* root) {
        
        sumitup(root);
        return sum;
    }
};
