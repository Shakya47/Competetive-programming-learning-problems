Vertical traversal

//Idea:
- we will store vertical level & horizontal level of each node

vector<vector<int>> verticalTraversal(TreeNode* root) {
    map<int,map<int,multiset<int>>> nodes;
    queue<pair<TreeNode*,pair<int,int>>> q;

    q.push({root,{0,0}});
    while(!q.empty()){
        auto it = q.front();
        q.pop();
        TreeNode *node = it.first;
        int x = it.second.first;
        int y = it.second.second;
        nodes[x][y].insert(node -> val);
        if(node->left != NULL) q.push({node->left, {x-1, y+1}});
        if(node->right != NULL) q.push({node->right, {x+1, y+1}});

    }
    vector<vector<int>>ans;

    for(auto i : nodes){
        vector<int>col;
        for(auto j : i.second){
            col.insert(col.end(), j.second.begin(), j.second.end());
        }
        ans.push_back(col);
    }

    return ans;
}
