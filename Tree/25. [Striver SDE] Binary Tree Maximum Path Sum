A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. 
A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path.

//Idea: 
- Similar to width finding algo

int maxSum(TreeNode *root, int &res){
    if(root == NULL) return 0;
    int lval = max(0, maxSum(root->left, res));
    int rval = max(0, maxSum(root->right,res));
    res = max(res, lval+rval+root->val);
    return root->val + max(lval, rval);

}

int maxPathSum(TreeNode* root) {
    int res = INT_MIN;
    maxSum(root, res);
    return res;
}
